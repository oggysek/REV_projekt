

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu May 02 22:54:38 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 12/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F46K22 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     _TMR1	set	4046
    61   000000                     _SSP2STATbits	set	3949
    62   000000                     _SSP2ADD	set	3950
    63   000000                     _TRISBbits	set	3987
    64   000000                     _ADRESL	set	4035
    65   000000                     _ADRESH	set	4036
    66   000000                     _IPEN	set	32391
    67   000000                     _TMR2IF	set	31985
    68   000000                     _ANSELA	set	3896
    69   000000                     _TMR6ON	set	31314
    70   000000                     _LATCbits	set	3979
    71   000000                     _LATDbits	set	3980
    72   000000                     _TX1IF	set	31988
    73   000000                     _RC1IE	set	31981
    74   000000                     _TMR1IF	set	31984
    75   000000                     _TMR1IE	set	31976
    76   000000                     _GODONE	set	32273
    77   000000                     _LATD6	set	31846
    78   000000                     _LATD5	set	31845
    79   000000                     _LATD4	set	31844
    80   000000                     _LATD3	set	31843
    81   000000                     _ANSELCbits	set	3898
    82   000000                     _ANSELDbits	set	3899
    83   000000                     _ANSELE	set	3900
    84   000000                     _PORTAbits	set	3968
    85   000000                     _ANSELAbits	set	3896
    86   000000                     _TRISAbits	set	3986
    87   000000                     _TRISCbits	set	3988
    88   000000                     _TRISDbits	set	3989
    89   000000                     _LATC4	set	31836
    90   000000                     _LATD2	set	31842
    91   000000                     _IPR1bits	set	3999
    92   000000                     _T2CONbits	set	4026
    93   000000                     _ADCON2bits	set	4032
    94   000000                     _TMR2IE	set	31977
    95   000000                     _PORTCbits	set	3970
    96   000000                     _LATBbits	set	3978
    97   000000                     _T6CONbits	set	3914
    98   000000                     _ADCON0bits	set	4034
    99   000000                     _T1CONbits	set	4045
   100   000000                     _PR2	set	4027
   101   000000                     _SSP2IF	set	32039
   102   000000                     _SSP2CON2bits	set	3947
   103   000000                     _SSP2CON1bits	set	3948
   104   000000                     _TMR6	set	3916
   105   000000                     _PR6	set	3915
   106   000000                     _TMR6IE	set	31722
   107   000000                     _TMR6IF	set	31730
   108   000000                     _GIE	set	32663
   109   000000                     _LATAbits	set	3977
   110   000000                     _SSP2BUF	set	3951
   111   000000                     _RCSTA1bits	set	4011
   112   000000                     _TXSTA1bits	set	4012
   113   000000                     _SPBRG1	set	4015
   114   000000                     _TXREG1	set	4013
   115                           
   116                           ; #config settings
   117                           
   118                           	psect	cinit
   119   00124A                     __pcinit:
   120                           	callstack 0
   121   00124A                     start_initialization:
   122                           	callstack 0
   123   00124A                     __initialization:
   124                           	callstack 0
   125                           
   126                           ; Clear objects allocated to BIGRAM (258 bytes)
   127   00124A  EE0E  F036         	lfsr	0,__pbssBIGRAM
   128   00124E  EE11 F002          	lfsr	1,258
   129   001252                     clear_0:
   130   001252  6AEE               	clrf	postinc0,c
   131   001254  50E5               	movf	postdec1,w,c
   132   001256  50E1               	movf	fsr1l,w,c
   133   001258  E1FC               	bnz	clear_0
   134   00125A  50E2               	movf	fsr1h,w,c
   135   00125C  E1FA               	bnz	clear_0
   136                           
   137                           ; Clear objects allocated to COMRAM (13 bytes)
   138   00125E  EE00  F017         	lfsr	0,__pbssCOMRAM
   139   001262  0E0D               	movlw	13
   140   001264                     clear_1:
   141   001264  6AEE               	clrf	postinc0,c
   142   001266  06E8               	decf	wreg,f,c
   143   001268  E1FD               	bnz	clear_1
   144   00126A                     end_of_initialization:
   145                           	callstack 0
   146   00126A                     __end_of__initialization:
   147                           	callstack 0
   148   00126A  9024               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   149   00126C  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   150   00126E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   151   001270  6EF8               	movwf	tblptru,c
   152   001272  0100               	movlb	0
   153   001274  EF04  F009         	goto	_main	;jump to C main() function
   154                           
   155                           	psect	bssCOMRAM
   156   000017                     __pbssCOMRAM:
   157                           	callstack 0
   158   000017                     _buttons:
   159                           	callstack 0
   160   000017                     	ds	8
   161   00001F                     _bsp_timeout:
   162                           	callstack 0
   163   00001F                     	ds	4
   164   000023                     gpio0@led_state:
   165                           	callstack 0
   166   000023                     	ds	1
   167                           
   168                           	psect	bssBIGRAM
   169   000E36                     __pbssBIGRAM:
   170                           	callstack 0
   171   000E36                     _event_queue:
   172                           	callstack 0
   173   000E36                     	ds	258
   174                           
   175                           	psect	cstackCOMRAM
   176   000001                     __pcstackCOMRAM:
   177                           	callstack 0
   178   000001                     i2write_evt@queue:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x0
   182   000001                     	ds	2
   183   000003                     i2write_evt@in:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x2
   187   000003                     	ds	1
   188   000004                     ??i2_write_evt:
   189                           
   190                           ; 1 bytes @ 0x3
   191   000004                     	ds	1
   192   000005                     i2write_evt@tmp:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0x4
   196   000005                     	ds	1
   197   000006                     i2fsm_add_event@in:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0x5
   201   000006                     	ds	1
   202   000007                     ??_HIGH_ISR:
   203                           
   204                           ; 1 bytes @ 0x6
   205   000007                     	ds	2
   206   000009                     write_evt@queue:
   207                           	callstack 0
   208                           
   209                           ; 2 bytes @ 0x8
   210   000009                     	ds	2
   211   00000B                     write_evt@in:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0xA
   215   00000B                     	ds	1
   216   00000C                     ??_write_evt:
   217                           
   218                           ; 1 bytes @ 0xB
   219   00000C                     	ds	1
   220   00000D                     write_evt@tmp:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0xC
   224   00000D                     	ds	1
   225   00000E                     fsm_add_event@in:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0xD
   229   00000E                     	ds	1
   230   00000F                     ??_LOW_ISR:
   231                           
   232                           ; 1 bytes @ 0xE
   233   00000F                     	ds	5
   234   000014                     driveLED@in:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x13
   238   000014                     	ds	1
   239   000015                     ??_main:
   240                           
   241                           ; 1 bytes @ 0x14
   242   000015                     	ds	2
   243                           
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   246 ;;
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 82 in file "main.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  1    wreg      void 
   256 ;; Registers used:
   257 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   258 ;; Tracked objects:
   259 ;;		On entry : 0/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   267 ;;Total ram usage:        2 bytes
   268 ;; Hardware stack levels required when called: 8
   269 ;; This function calls:
   270 ;;		_bsp_init
   271 ;;		_gpio0
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text0
   278   001208                     __ptext0:
   279                           	callstack 0
   280   001208                     _main:
   281                           	callstack 23
   282   001208                     
   283                           ;main.c: 84:     bsp_init();
   284   001208  EC85  F008         	call	_bsp_init	;wreg free
   285   00120C                     l1116:
   286                           
   287                           ;main.c: 86:         if(PORTAbits.RA4) {
   288   00120C  A880               	btfss	128,4,c	;volatile
   289   00120E  EF0B  F009         	goto	u291
   290   001212  EF0D  F009         	goto	u290
   291   001216                     u291:
   292   001216  EF06  F009         	goto	l1116
   293   00121A                     u290:
   294   00121A                     
   295                           ;main.c: 87:             gpio0();
   296   00121A  EC3C  F009         	call	_gpio0	;wreg free
   297   00121E                     l56:
   298   00121E  B880               	btfsc	128,4,c	;volatile
   299   001220  EF14  F009         	goto	u301
   300   001224  EF16  F009         	goto	u300
   301   001228                     u301:
   302   001228  EF0F  F009         	goto	l56
   303   00122C                     u300:
   304   00122C                     
   305                           ;main.c: 89:             _delay((unsigned long)((500)*(8E6/4000.0)));
   306   00122C  0E06               	movlw	6
   307   00122E  6E16               	movwf	(??_main+1)^0,c
   308   001230  0E13               	movlw	19
   309   001232  6E15               	movwf	??_main^0,c
   310   001234  0EAE               	movlw	174
   311   001236                     u887:
   312   001236  2EE8               	decfsz	wreg,f,c
   313   001238  D7FE               	bra	u887
   314   00123A  2E15               	decfsz	??_main^0,f,c
   315   00123C  D7FC               	bra	u887
   316   00123E  2E16               	decfsz	(??_main+1)^0,f,c
   317   001240  D7FA               	bra	u887
   318   001242  EF06  F009         	goto	l1116
   319   001246  EF92  F000         	goto	start
   320   00124A                     __end_of_main:
   321                           	callstack 0
   322                           
   323 ;; *************** function _gpio0 *****************
   324 ;; Defined at:
   325 ;;		line 72 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   343 ;;Total ram usage:        0 bytes
   344 ;; Hardware stack levels used: 1
   345 ;; Hardware stack levels required when called: 7
   346 ;; This function calls:
   347 ;;		_driveLED
   348 ;; This function is called by:
   349 ;;		_main
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           	psect	text1
   354   001278                     __ptext1:
   355                           	callstack 0
   356   001278                     _gpio0:
   357                           	callstack 23
   358   001278                     
   359                           ;main.c: 73:     static unsigned char led_state = 0;;main.c: 74:     driveLED(~led_state
      +                          );
   360   001278  5023               	movf	gpio0@led_state^0,w,c
   361   00127A  0AFF               	xorlw	255
   362   00127C  EC4D  F008         	call	_driveLED
   363   001280                     
   364                           ;main.c: 75:     led_state = (led_state << 1) + 1;
   365   001280  5023               	movf	gpio0@led_state^0,w,c
   366   001282  0D02               	mullw	2
   367   001284  28F3               	incf	243,w,c
   368   001286  6E23               	movwf	gpio0@led_state^0,c
   369   001288                     
   370                           ;main.c: 76:     if (led_state > 0b111111) {
   371   001288  0E3F               	movlw	63
   372   00128A  6423               	cpfsgt	gpio0@led_state^0,c
   373   00128C  EF4A  F009         	goto	u171
   374   001290  EF4C  F009         	goto	u170
   375   001294                     u171:
   376   001294  EF4E  F009         	goto	l49
   377   001298                     u170:
   378   001298                     
   379                           ;main.c: 77:         led_state = 0;
   380   001298  0E00               	movlw	0
   381   00129A  6E23               	movwf	gpio0@led_state^0,c
   382   00129C                     l49:
   383   00129C  0012               	return		;funcret
   384   00129E                     __end_of_gpio0:
   385                           	callstack 0
   386                           
   387 ;; *************** function _driveLED *****************
   388 ;; Defined at:
   389 ;;		line 48 in file "main.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;  in              1    wreg     unsigned char 
   392 ;; Auto vars:     Size  Location     Type
   393 ;;  in              1   19[COMRAM] unsigned char 
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;Total ram usage:        1 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; Hardware stack levels required when called: 6
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_gpio0
   414 ;;		_knight_rider
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text2
   419   00109A                     __ptext2:
   420                           	callstack 0
   421   00109A                     _driveLED:
   422                           	callstack 23
   423                           
   424                           ;incstack = 0
   425                           ;driveLED@in stored from wreg
   426   00109A  6E14               	movwf	driveLED@in^0,c
   427   00109C                     
   428                           ;main.c: 49:         LATD2 = in & 1;
   429   00109C  B014               	btfsc	driveLED@in^0,0,c
   430   00109E  EF53  F008         	goto	u11
   431   0010A2  EF56  F008         	goto	u10
   432   0010A6                     u11:
   433   0010A6  848C               	bsf	3980,2,c	;volatile
   434   0010A8  EF57  F008         	goto	u25
   435   0010AC                     u10:
   436   0010AC  948C               	bcf	3980,2,c	;volatile
   437   0010AE                     u25:
   438                           
   439                           ;main.c: 50:         LATD3 = in & 2 ? 1 : 0;
   440   0010AE  B214               	btfsc	driveLED@in^0,1,c
   441   0010B0  EF5C  F008         	goto	u31
   442   0010B4  EF5F  F008         	goto	u30
   443   0010B8                     u31:
   444   0010B8  868C               	bsf	3980,3,c	;volatile
   445   0010BA  EF60  F008         	goto	u45
   446   0010BE                     u30:
   447   0010BE  968C               	bcf	3980,3,c	;volatile
   448   0010C0                     u45:
   449                           
   450                           ;main.c: 51:         LATC4 = in & 4 ? 1 : 0;
   451   0010C0  B414               	btfsc	driveLED@in^0,2,c
   452   0010C2  EF65  F008         	goto	u51
   453   0010C6  EF68  F008         	goto	u50
   454   0010CA                     u51:
   455   0010CA  888B               	bsf	3979,4,c	;volatile
   456   0010CC  EF69  F008         	goto	u65
   457   0010D0                     u50:
   458   0010D0  988B               	bcf	3979,4,c	;volatile
   459   0010D2                     u65:
   460                           
   461                           ;main.c: 52:         LATD4 = in & 8 ? 1 : 0;
   462   0010D2  B614               	btfsc	driveLED@in^0,3,c
   463   0010D4  EF6E  F008         	goto	u71
   464   0010D8  EF71  F008         	goto	u70
   465   0010DC                     u71:
   466   0010DC  888C               	bsf	3980,4,c	;volatile
   467   0010DE  EF72  F008         	goto	u85
   468   0010E2                     u70:
   469   0010E2  988C               	bcf	3980,4,c	;volatile
   470   0010E4                     u85:
   471                           
   472                           ;main.c: 53:         LATD5 = in & 16 ? 1 : 0;
   473   0010E4  B814               	btfsc	driveLED@in^0,4,c
   474   0010E6  EF77  F008         	goto	u91
   475   0010EA  EF7A  F008         	goto	u90
   476   0010EE                     u91:
   477   0010EE  8A8C               	bsf	3980,5,c	;volatile
   478   0010F0  EF7B  F008         	goto	u105
   479   0010F4                     u90:
   480   0010F4  9A8C               	bcf	3980,5,c	;volatile
   481   0010F6                     u105:
   482                           
   483                           ;main.c: 54:         LATD6 = in & 32 ? 1 : 0;
   484   0010F6  BA14               	btfsc	driveLED@in^0,5,c
   485   0010F8  EF80  F008         	goto	u111
   486   0010FC  EF83  F008         	goto	u110
   487   001100                     u111:
   488   001100  8C8C               	bsf	3980,6,c	;volatile
   489   001102  EF84  F008         	goto	u125
   490   001106                     u110:
   491   001106  9C8C               	bcf	3980,6,c	;volatile
   492   001108                     u125:
   493   001108  0012               	return		;funcret
   494   00110A                     __end_of_driveLED:
   495                           	callstack 0
   496                           
   497 ;; *************** function _bsp_init *****************
   498 ;; Defined at:
   499 ;;		line 8 in file "bsp.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   517 ;;Total ram usage:        0 bytes
   518 ;; Hardware stack levels used: 1
   519 ;; Hardware stack levels required when called: 6
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text3
   528   00110A                     __ptext3:
   529                           	callstack 0
   530   00110A                     _bsp_init:
   531                           	callstack 24
   532   00110A                     
   533                           ;bsp.c: 9:     TRISCbits.RC0 = 1;
   534   00110A  8094               	bsf	148,0,c	;volatile
   535                           
   536                           ;bsp.c: 10:     TRISAbits.RA4 = 1;
   537   00110C  8892               	bsf	146,4,c	;volatile
   538                           
   539                           ;bsp.c: 11:     TRISAbits.RA3 = 1;
   540   00110E  8692               	bsf	146,3,c	;volatile
   541                           
   542                           ;bsp.c: 12:     TRISAbits.RA2 = 1;
   543   001110  8492               	bsf	146,2,c	;volatile
   544                           
   545                           ;bsp.c: 14:     TRISDbits.RD2 = 0;
   546   001112  9495               	bcf	149,2,c	;volatile
   547                           
   548                           ;bsp.c: 15:     TRISDbits.RD3 = 0;
   549   001114  9695               	bcf	149,3,c	;volatile
   550                           
   551                           ;bsp.c: 16:     TRISCbits.RC4 = 0;
   552   001116  9894               	bcf	148,4,c	;volatile
   553                           
   554                           ;bsp.c: 17:     TRISDbits.RD4 = 0;
   555   001118  9895               	bcf	149,4,c	;volatile
   556                           
   557                           ;bsp.c: 18:     TRISDbits.RD5 = 0;
   558   00111A  9A95               	bcf	149,5,c	;volatile
   559                           
   560                           ;bsp.c: 19:     TRISDbits.RD6 = 0;
   561   00111C  9C95               	bcf	149,6,c	;volatile
   562                           
   563                           ;bsp.c: 21:     TRISBbits.TRISB5 = 0;
   564   00111E  9A93               	bcf	147,5,c	;volatile
   565   001120                     
   566                           ;bsp.c: 23:     ANSELA = 0;
   567   001120  0E00               	movlw	0
   568   001122  010F               	movlb	15	; () banked
   569   001124  6F38               	movwf	56,b	;volatile
   570   001126                     
   571                           ; BSR set to: 15
   572                           ;bsp.c: 25:     LATDbits.LD2 = 1;
   573   001126  848C               	bsf	140,2,c	;volatile
   574   001128                     
   575                           ; BSR set to: 15
   576                           ;bsp.c: 26:     LATDbits.LD3 = 1;
   577   001128  868C               	bsf	140,3,c	;volatile
   578   00112A                     
   579                           ; BSR set to: 15
   580                           ;bsp.c: 27:     LATCbits.LC4 = 1;
   581   00112A  888B               	bsf	139,4,c	;volatile
   582   00112C                     
   583                           ; BSR set to: 15
   584                           ;bsp.c: 28:     LATDbits.LD4 = 1;
   585   00112C  888C               	bsf	140,4,c	;volatile
   586   00112E                     
   587                           ; BSR set to: 15
   588                           ;bsp.c: 29:     LATDbits.LD5 = 1;
   589   00112E  8A8C               	bsf	140,5,c	;volatile
   590   001130                     
   591                           ; BSR set to: 15
   592                           ;bsp.c: 30:     LATDbits.LD6 = 1;
   593   001130  8C8C               	bsf	140,6,c	;volatile
   594                           
   595                           ;bsp.c: 32:     T2CONbits.T2CKPS = 0b11;
   596   001132  0E03               	movlw	3
   597   001134  12BA               	iorwf	186,f,c	;volatile
   598                           
   599                           ;bsp.c: 33:     T2CONbits.T2OUTPS = 0b1001;
   600   001136  50BA               	movf	186,w,c	;volatile
   601   001138  0B87               	andlw	-121
   602   00113A  0948               	iorlw	72
   603   00113C  6EBA               	movwf	186,c	;volatile
   604                           
   605                           ;bsp.c: 34:     PR2 = 250;
   606   00113E  0EFA               	movlw	250
   607   001140  6EBB               	movwf	187,c	;volatile
   608   001142                     
   609                           ; BSR set to: 15
   610                           ;bsp.c: 35:     IPR1bits.TMR2IP = 0;
   611   001142  929F               	bcf	159,1,c	;volatile
   612   001144                     
   613                           ; BSR set to: 15
   614                           ;bsp.c: 36:     TMR2IE = 1;
   615   001144  829D               	bsf	3997,1,c	;volatile
   616   001146                     
   617                           ; BSR set to: 15
   618                           ;bsp.c: 37:     TMR2IF = 0;
   619   001146  929E               	bcf	3998,1,c	;volatile
   620                           
   621                           ;bsp.c: 39:     T6CONbits.T6CKPS = 0b11;
   622   001148  0E03               	movlw	3
   623   00114A  134A               	iorwf	74,f,b	;volatile
   624                           
   625                           ;bsp.c: 40:     T6CONbits.T6OUTPS = 0b0100;
   626   00114C  514A               	movf	74,w,b	;volatile
   627   00114E  0B87               	andlw	-121
   628   001150  0920               	iorlw	32
   629   001152  6F4A               	movwf	74,b	;volatile
   630                           
   631                           ;bsp.c: 41:     PR6 = 100;
   632   001154  0E64               	movlw	100
   633   001156  6F4B               	movwf	75,b	;volatile
   634   001158                     
   635                           ; BSR set to: 15
   636                           ;bsp.c: 42:     TMR6IE = 1;
   637   001158  847D               	bsf	3965,2,c	;volatile
   638   00115A                     
   639                           ; BSR set to: 15
   640                           ;bsp.c: 43:     TMR6IF = 0;
   641   00115A  947E               	bcf	3966,2,c	;volatile
   642                           
   643                           ;bsp.c: 46:     T1CONbits.TMR1CS = 0b00;
   644   00115C  0E3F               	movlw	-193
   645   00115E  16CD               	andwf	205,f,c	;volatile
   646                           
   647                           ;bsp.c: 47:     T1CONbits.T1CKPS = 0b11;
   648   001160  0E30               	movlw	48
   649   001162  12CD               	iorwf	205,f,c	;volatile
   650   001164                     
   651                           ; BSR set to: 15
   652                           ;bsp.c: 48:     TMR1IE = 1;
   653   001164  809D               	bsf	3997,0,c	;volatile
   654   001166                     
   655                           ; BSR set to: 15
   656                           ;bsp.c: 49:     TMR1IF = 0;
   657   001166  909E               	bcf	3998,0,c	;volatile
   658   001168                     
   659                           ; BSR set to: 15
   660                           ;bsp.c: 51:     IPEN = 1;
   661   001168  8ED0               	bsf	4048,7,c	;volatile
   662   00116A                     
   663                           ; BSR set to: 15
   664   00116A  0012               	return		;funcret
   665   00116C                     __end_of_bsp_init:
   666                           	callstack 0
   667                           
   668 ;; *************** function _LOW_ISR *****************
   669 ;; Defined at:
   670 ;;		line 96 in file "bsp.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;		None
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;Total ram usage:        5 bytes
   689 ;; Hardware stack levels used: 1
   690 ;; Hardware stack levels required when called: 5
   691 ;; This function calls:
   692 ;;		_fsm_add_event
   693 ;; This function is called by:
   694 ;;		Interrupt level 1
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	intcodelo
   699   000018                     __pintcodelo:
   700                           	callstack 0
   701   000018                     _LOW_ISR:
   702                           	callstack 23
   703                           
   704                           ; BSR set to: 15
   705                           ;incstack = 0
   706   000018  8024               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   707   00001A  CFD8 F00F          	movff	status,??_LOW_ISR
   708   00001E  CFE8 F010          	movff	wreg,??_LOW_ISR+1
   709   000022  CFE0 F011          	movff	bsr,??_LOW_ISR+2
   710   000026  CFD9 F012          	movff	fsr2l,??_LOW_ISR+3
   711   00002A  CFDA F013          	movff	fsr2h,??_LOW_ISR+4
   712   00002E                     
   713                           ;bsp.c: 98:     if (TMR2IF && TMR2IE ){
   714   00002E  A29E               	btfss	3998,1,c	;volatile
   715   000030  EF1C  F000         	goto	i1u78_21
   716   000034  EF1E  F000         	goto	i1u78_20
   717   000038                     i1u78_21:
   718   000038  EF86  F000         	goto	i1l175
   719   00003C                     i1u78_20:
   720   00003C  A29D               	btfss	3997,1,c	;volatile
   721   00003E  EF23  F000         	goto	i1u79_21
   722   000042  EF25  F000         	goto	i1u79_20
   723   000046                     i1u79_21:
   724   000046  EF86  F000         	goto	i1l175
   725   00004A                     i1u79_20:
   726   00004A                     
   727                           ;bsp.c: 100:         buttons.btn1_acc<<=1;
   728   00004A  90D8               	bcf	status,0,c
   729   00004C  3617               	rlcf	_buttons^0,f,c
   730                           
   731                           ;volatile
   732                           ;bsp.c: 101:         buttons.btn1_acc |= PORTCbits.RC0;
   733   00004E  B082               	btfsc	130,0,c	;volatile
   734   000050  EF2C  F000         	goto	i1u80_21
   735   000054  EF2F  F000         	goto	i1u80_20
   736   000058                     i1u80_21:
   737   000058  0E01               	movlw	1
   738   00005A  EF30  F000         	goto	i1u80_26
   739   00005E                     i1u80_20:
   740   00005E  0E00               	movlw	0
   741   000060                     i1u80_26:
   742   000060  1217               	iorwf	_buttons^0,f,c	;volatile
   743                           
   744                           ;bsp.c: 103:         buttons.btn2_acc<<=1;
   745   000062  90D8               	bcf	status,0,c
   746   000064  3619               	rlcf	(_buttons+2)^0,f,c
   747                           
   748                           ;volatile
   749                           ;bsp.c: 104:         buttons.btn2_acc |= PORTAbits.RA4;
   750   000066  B880               	btfsc	128,4,c	;volatile
   751   000068  EF38  F000         	goto	i1u81_21
   752   00006C  EF3B  F000         	goto	i1u81_20
   753   000070                     i1u81_21:
   754   000070  0E01               	movlw	1
   755   000072  EF3C  F000         	goto	i1u81_26
   756   000076                     i1u81_20:
   757   000076  0E00               	movlw	0
   758   000078                     i1u81_26:
   759   000078  1219               	iorwf	(_buttons+2)^0,f,c	;volatile
   760                           
   761                           ;bsp.c: 106:         buttons.btn3_acc<<=1;
   762   00007A  90D8               	bcf	status,0,c
   763   00007C  361B               	rlcf	(_buttons+4)^0,f,c
   764                           
   765                           ;volatile
   766                           ;bsp.c: 107:         buttons.btn3_acc |= PORTAbits.RA3;
   767   00007E  B680               	btfsc	128,3,c	;volatile
   768   000080  EF44  F000         	goto	i1u82_21
   769   000084  EF47  F000         	goto	i1u82_20
   770   000088                     i1u82_21:
   771   000088  0E01               	movlw	1
   772   00008A  EF48  F000         	goto	i1u82_26
   773   00008E                     i1u82_20:
   774   00008E  0E00               	movlw	0
   775   000090                     i1u82_26:
   776   000090  121B               	iorwf	(_buttons+4)^0,f,c	;volatile
   777                           
   778                           ;bsp.c: 109:         buttons.btn4_acc<<=1;
   779   000092  90D8               	bcf	status,0,c
   780   000094  361D               	rlcf	(_buttons+6)^0,f,c
   781                           
   782                           ;volatile
   783                           ;bsp.c: 110:         buttons.btn4_acc |= PORTAbits.RA2;
   784   000096  B480               	btfsc	128,2,c	;volatile
   785   000098  EF50  F000         	goto	i1u83_21
   786   00009C  EF53  F000         	goto	i1u83_20
   787   0000A0                     i1u83_21:
   788   0000A0  0E01               	movlw	1
   789   0000A2  EF54  F000         	goto	i1u83_26
   790   0000A6                     i1u83_20:
   791   0000A6  0E00               	movlw	0
   792   0000A8                     i1u83_26:
   793   0000A8  121D               	iorwf	(_buttons+6)^0,f,c	;volatile
   794                           
   795                           ;bsp.c: 112:         if(buttons.btn1_acc == 0b01111111){
   796   0000AA  0E7F               	movlw	127
   797   0000AC  1817               	xorwf	_buttons^0,w,c	;volatile
   798   0000AE  A4D8               	btfss	status,2,c
   799   0000B0  EF5C  F000         	goto	i1u84_21
   800   0000B4  EF5E  F000         	goto	i1u84_20
   801   0000B8                     i1u84_21:
   802   0000B8  EF61  F000         	goto	i1l1342
   803   0000BC                     i1u84_20:
   804   0000BC                     
   805                           ;bsp.c: 113:            fsm_add_event(3U);
   806   0000BC  0E03               	movlw	3
   807   0000BE  EC4F  F009         	call	_fsm_add_event
   808   0000C2                     i1l1342:
   809                           
   810                           ;bsp.c: 115:         if(buttons.btn2_acc == 0b01111111){
   811   0000C2  0E7F               	movlw	127
   812   0000C4  1819               	xorwf	(_buttons+2)^0,w,c	;volatile
   813   0000C6  A4D8               	btfss	status,2,c
   814   0000C8  EF68  F000         	goto	i1u85_21
   815   0000CC  EF6A  F000         	goto	i1u85_20
   816   0000D0                     i1u85_21:
   817   0000D0  EF6D  F000         	goto	i1l1346
   818   0000D4                     i1u85_20:
   819   0000D4                     
   820                           ;bsp.c: 116:            fsm_add_event(4U);
   821   0000D4  0E04               	movlw	4
   822   0000D6  EC4F  F009         	call	_fsm_add_event
   823   0000DA                     i1l1346:
   824                           
   825                           ;bsp.c: 118:         if(buttons.btn3_acc == 0b01111111){
   826   0000DA  0E7F               	movlw	127
   827   0000DC  181B               	xorwf	(_buttons+4)^0,w,c	;volatile
   828   0000DE  A4D8               	btfss	status,2,c
   829   0000E0  EF74  F000         	goto	i1u86_21
   830   0000E4  EF76  F000         	goto	i1u86_20
   831   0000E8                     i1u86_21:
   832   0000E8  EF79  F000         	goto	i1l1350
   833   0000EC                     i1u86_20:
   834   0000EC                     
   835                           ;bsp.c: 119:            fsm_add_event(5U);
   836   0000EC  0E05               	movlw	5
   837   0000EE  EC4F  F009         	call	_fsm_add_event
   838   0000F2                     i1l1350:
   839                           
   840                           ;bsp.c: 121:         if(buttons.btn4_acc == 0b01111111){
   841   0000F2  0E7F               	movlw	127
   842   0000F4  181D               	xorwf	(_buttons+6)^0,w,c	;volatile
   843   0000F6  A4D8               	btfss	status,2,c
   844   0000F8  EF80  F000         	goto	i1u87_21
   845   0000FC  EF82  F000         	goto	i1u87_20
   846   000100                     i1u87_21:
   847   000100  EF85  F000         	goto	i1l1354
   848   000104                     i1u87_20:
   849   000104                     
   850                           ;bsp.c: 122:            fsm_add_event(6U);
   851   000104  0E06               	movlw	6
   852   000106  EC4F  F009         	call	_fsm_add_event
   853   00010A                     i1l1354:
   854                           
   855                           ;bsp.c: 125:         TMR2IF = 0;
   856   00010A  929E               	bcf	3998,1,c	;volatile
   857   00010C                     i1l175:
   858   00010C  C013  FFDA         	movff	??_LOW_ISR+4,fsr2h
   859   000110  C012  FFD9         	movff	??_LOW_ISR+3,fsr2l
   860   000114  C011  FFE0         	movff	??_LOW_ISR+2,bsr
   861   000118  C010  FFE8         	movff	??_LOW_ISR+1,wreg
   862   00011C  C00F  FFD8         	movff	??_LOW_ISR,status
   863   000120  9024               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   864   000122  0010               	retfie	
   865   000124                     __end_of_LOW_ISR:
   866                           	callstack 0
   867                           
   868 ;; *************** function _fsm_add_event *****************
   869 ;; Defined at:
   870 ;;		line 6 in file "fsm.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  in              1    wreg     unsigned char 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  in              1   13[COMRAM] unsigned char 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;Total ram usage:        1 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; Hardware stack levels required when called: 4
   891 ;; This function calls:
   892 ;;		_write_evt
   893 ;; This function is called by:
   894 ;;		_LOW_ISR
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text5
   899   00129E                     __ptext5:
   900                           	callstack 0
   901   00129E                     _fsm_add_event:
   902                           	callstack 23
   903                           
   904                           ;incstack = 0
   905                           ;fsm_add_event@in stored from wreg
   906   00129E  6E0E               	movwf	fsm_add_event@in^0,c
   907   0012A0                     
   908                           ;fsm.c: 7:     write_evt(&event_queue, in);
   909   0012A0  0E36               	movlw	low _event_queue
   910   0012A2  6E09               	movwf	write_evt@queue^0,c
   911   0012A4  0E0E               	movlw	high _event_queue
   912   0012A6  6E0A               	movwf	(write_evt@queue+1)^0,c
   913   0012A8  C00E  F00B         	movff	fsm_add_event@in,write_evt@in
   914   0012AC  ECB6  F008         	call	_write_evt	;wreg free
   915   0012B0  0012               	return		;funcret
   916   0012B2                     __end_of_fsm_add_event:
   917                           	callstack 0
   918                           
   919 ;; *************** function _write_evt *****************
   920 ;; Defined at:
   921 ;;		line 3 in file "evt_queue.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  queue           2    8[COMRAM] PTR volatile struct .
   924 ;;		 -> event_queue(258), 
   925 ;;  in              1   10[COMRAM] unsigned char 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  tmp             1   12[COMRAM] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   937 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;Total ram usage:        5 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 3
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_fsm_add_event
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text6
   952   00116C                     __ptext6:
   953                           	callstack 0
   954   00116C                     _write_evt:
   955                           	callstack 23
   956   00116C                     
   957                           ;evt_queue.c: 4:  char tmp = (GIE & 0b1); GIE=0;;
   958   00116C  0E00               	movlw	0
   959   00116E  BEF2               	btfsc	4082,7,c	;volatile
   960   001170  0E01               	movlw	1
   961   001172  0B01               	andlw	1
   962   001174  6E0D               	movwf	write_evt@tmp^0,c
   963   001176  9EF2               	bcf	4082,7,c	;volatile
   964   001178                     
   965                           ;evt_queue.c: 5:     queue->fifo[queue->tail++] = in;
   966   001178  EE21 F001          	lfsr	2,257
   967   00117C  5009               	movf	write_evt@queue^0,w,c
   968   00117E  26D9               	addwf	fsr2l,f,c
   969   001180  500A               	movf	(write_evt@queue+1)^0,w,c
   970   001182  22DA               	addwfc	fsr2h,f,c
   971   001184  50DF               	movf	indf2,w,c
   972   001186  6E0C               	movwf	??_write_evt^0,c
   973   001188  500C               	movf	??_write_evt^0,w,c
   974   00118A  2409               	addwf	write_evt@queue^0,w,c
   975   00118C  6ED9               	movwf	fsr2l,c
   976   00118E  0E00               	movlw	0
   977   001190  200A               	addwfc	(write_evt@queue+1)^0,w,c
   978   001192  6EDA               	movwf	fsr2h,c
   979   001194  C00B  FFDF         	movff	write_evt@in,indf2
   980   001198  EE21 F001          	lfsr	2,257
   981   00119C  5009               	movf	write_evt@queue^0,w,c
   982   00119E  26D9               	addwf	fsr2l,f,c
   983   0011A0  500A               	movf	(write_evt@queue+1)^0,w,c
   984   0011A2  22DA               	addwfc	fsr2h,f,c
   985   0011A4  2ADF               	incf	indf2,f,c
   986   0011A6                     
   987                           ;evt_queue.c: 6:     GIE = (tmp & 0b1);;
   988   0011A6  B00D               	btfsc	write_evt@tmp^0,0,c
   989   0011A8  EFD8  F008         	goto	i1u69_21
   990   0011AC  EFDB  F008         	goto	i1u69_20
   991   0011B0                     i1u69_21:
   992   0011B0  8EF2               	bsf	4082,7,c	;volatile
   993   0011B2  EFDC  F008         	goto	i1u70_25
   994   0011B6                     i1u69_20:
   995   0011B6  9EF2               	bcf	4082,7,c	;volatile
   996   0011B8                     i1u70_25:
   997   0011B8  0012               	return		;funcret
   998   0011BA                     __end_of_write_evt:
   999                           	callstack 0
  1000                           
  1001 ;; *************** function _HIGH_ISR *****************
  1002 ;; Defined at:
  1003 ;;		line 78 in file "bsp.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;Total ram usage:        2 bytes
  1022 ;; Hardware stack levels used: 1
  1023 ;; Hardware stack levels required when called: 2
  1024 ;; This function calls:
  1025 ;;		i2_fsm_add_event
  1026 ;; This function is called by:
  1027 ;;		Interrupt level 2
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	intcode
  1032   000008                     __pintcode:
  1033                           	callstack 0
  1034   000008                     _HIGH_ISR:
  1035                           	callstack 23
  1036                           
  1037                           ;incstack = 0
  1038   000008  8224               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1039   00000A  EF01  F008         	goto	int_func
  1040                           
  1041                           	psect	intcode_body
  1042   001002                     __pintcode_body:
  1043                           	callstack 23
  1044   001002                     int_func:
  1045                           	callstack 23
  1046   001002  CFD9 F007          	movff	fsr2l,??_HIGH_ISR
  1047   001006  CFDA F008          	movff	fsr2h,??_HIGH_ISR+1
  1048   00100A                     
  1049                           ;bsp.c: 80:     if (TMR1IF && TMR1IE ){
  1050   00100A  A09E               	btfss	3998,0,c	;volatile
  1051   00100C  EF0A  F008         	goto	i2u73_41
  1052   001010  EF0C  F008         	goto	i2u73_40
  1053   001014                     i2u73_41:
  1054   001014  EF1B  F008         	goto	i2l1320
  1055   001018                     i2u73_40:
  1056   001018  A09D               	btfss	3997,0,c	;volatile
  1057   00101A  EF11  F008         	goto	i2u74_41
  1058   00101E  EF13  F008         	goto	i2u74_40
  1059   001022                     i2u74_41:
  1060   001022  EF1B  F008         	goto	i2l1320
  1061   001026                     i2u74_40:
  1062   001026                     
  1063                           ;bsp.c: 81:         fsm_add_event(8U);
  1064   001026  0E08               	movlw	8
  1065   001028  EC59  F009         	call	i2_fsm_add_event
  1066   00102C                     
  1067                           ;bsp.c: 82:         TMR1 = 55535;
  1068   00102C  0ED8               	movlw	216
  1069   00102E  6ECF               	movwf	207,c	;volatile
  1070   001030  0EEF               	movlw	239
  1071   001032  6ECE               	movwf	206,c	;volatile
  1072   001034                     
  1073                           ;bsp.c: 83:         TMR1IF = 0;
  1074   001034  909E               	bcf	3998,0,c	;volatile
  1075   001036                     i2l1320:
  1076                           
  1077                           ;bsp.c: 86:     if (TMR6IF && TMR6IE ){
  1078   001036  A47E               	btfss	3966,2,c	;volatile
  1079   001038  EF20  F008         	goto	i2u75_41
  1080   00103C  EF22  F008         	goto	i2u75_40
  1081   001040                     i2u75_41:
  1082   001040  EF47  F008         	goto	i2l165
  1083   001044                     i2u75_40:
  1084   001044  A47D               	btfss	3965,2,c	;volatile
  1085   001046  EF27  F008         	goto	i2u76_41
  1086   00104A  EF29  F008         	goto	i2u76_40
  1087   00104E                     i2u76_41:
  1088   00104E  EF47  F008         	goto	i2l165
  1089   001052                     i2u76_40:
  1090   001052                     
  1091                           ;bsp.c: 87:         if(--bsp_timeout <= 0){
  1092   001052  0EFF               	movlw	255
  1093   001054  261F               	addwf	_bsp_timeout^0,f,c	;volatile
  1094   001056  0EFF               	movlw	255
  1095   001058  2220               	addwfc	(_bsp_timeout+1)^0,f,c	;volatile
  1096   00105A  0EFF               	movlw	255
  1097   00105C  2221               	addwfc	(_bsp_timeout+2)^0,f,c	;volatile
  1098   00105E  0EFF               	movlw	255
  1099   001060  2222               	addwfc	(_bsp_timeout+3)^0,f,c	;volatile
  1100   001062  BE22               	btfsc	(_bsp_timeout+3)^0,7,c	;volatile
  1101   001064  EF40  F008         	goto	i2u77_40
  1102   001068  5022               	movf	(_bsp_timeout+3)^0,w,c	;volatile
  1103   00106A  1021               	iorwf	(_bsp_timeout+2)^0,w,c	;volatile
  1104   00106C  1020               	iorwf	(_bsp_timeout+1)^0,w,c	;volatile
  1105   00106E  E106               	bnz	i2u77_41
  1106   001070  041F               	decf	_bsp_timeout^0,w,c	;volatile
  1107   001072  B0D8               	btfsc	status,0,c
  1108   001074  EF3E  F008         	goto	i2u77_41
  1109   001078  EF40  F008         	goto	i2u77_40
  1110   00107C                     i2u77_41:
  1111   00107C  EF45  F008         	goto	i2l1330
  1112   001080                     i2u77_40:
  1113   001080                     
  1114                           ;bsp.c: 88:             fsm_add_event(7U);
  1115   001080  0E07               	movlw	7
  1116   001082  EC59  F009         	call	i2_fsm_add_event
  1117   001086                     
  1118                           ;bsp.c: 89:             TMR6ON = 0;
  1119   001086  010F               	movlb	15	; () banked
  1120   001088  954A               	bcf	74,2,b	;volatile
  1121   00108A                     i2l1330:
  1122                           
  1123                           ;bsp.c: 91:         LATBbits.LB5 ^= 1;
  1124   00108A  7A8A               	btg	138,5,c	;volatile
  1125   00108C                     
  1126                           ;bsp.c: 92:         TMR6IF = 0;
  1127   00108C  947E               	bcf	3966,2,c	;volatile
  1128   00108E                     i2l165:
  1129   00108E  C008  FFDA         	movff	??_HIGH_ISR+1,fsr2h
  1130   001092  C007  FFD9         	movff	??_HIGH_ISR,fsr2l
  1131   001096  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1132   001098  0011               	retfie		f
  1133   00109A                     __end_of_HIGH_ISR:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function i2_fsm_add_event *****************
  1137 ;; Defined at:
  1138 ;;		line 6 in file "fsm.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  in              1    wreg     unsigned char 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  in              1    5[COMRAM] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;Total ram usage:        1 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; Hardware stack levels required when called: 1
  1159 ;; This function calls:
  1160 ;;		i2_write_evt
  1161 ;; This function is called by:
  1162 ;;		_HIGH_ISR
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text8
  1167   0012B2                     __ptext8:
  1168                           	callstack 0
  1169   0012B2                     i2_fsm_add_event:
  1170                           	callstack 23
  1171                           
  1172                           ;incstack = 0
  1173                           ;i2fsm_add_event@in stored from wreg
  1174   0012B2  6E06               	movwf	i2fsm_add_event@in^0,c
  1175   0012B4                     
  1176                           ;fsm.c: 7:     write_evt(&event_queue, in);
  1177   0012B4  0E36               	movlw	low _event_queue
  1178   0012B6  6E01               	movwf	i2write_evt@queue^0,c
  1179   0012B8  0E0E               	movlw	high _event_queue
  1180   0012BA  6E02               	movwf	(i2write_evt@queue+1)^0,c
  1181   0012BC  C006  F003         	movff	i2fsm_add_event@in,i2write_evt@in
  1182   0012C0  ECDD  F008         	call	i2_write_evt	;wreg free
  1183   0012C4  0012               	return		;funcret
  1184   0012C6                     __end_ofi2_fsm_add_event:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function i2_write_evt *****************
  1188 ;; Defined at:
  1189 ;;		line 3 in file "evt_queue.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  queue           2    0[COMRAM] PTR volatile struct .
  1192 ;;		 -> event_queue(258), 
  1193 ;;  in              1    2[COMRAM] unsigned char 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  tmp             1    4[COMRAM] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1205 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;Total ram usage:        5 bytes
  1210 ;; Hardware stack levels used: 1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		i2_fsm_add_event
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text9
  1219   0011BA                     __ptext9:
  1220                           	callstack 0
  1221   0011BA                     i2_write_evt:
  1222                           	callstack 23
  1223   0011BA                     
  1224                           ;evt_queue.c: 4:  char tmp = (GIE & 0b1); GIE=0;;
  1225   0011BA  0E00               	movlw	0
  1226   0011BC  BEF2               	btfsc	4082,7,c	;volatile
  1227   0011BE  0E01               	movlw	1
  1228   0011C0  0B01               	andlw	1
  1229   0011C2  6E05               	movwf	i2write_evt@tmp^0,c
  1230   0011C4  9EF2               	bcf	4082,7,c	;volatile
  1231   0011C6                     
  1232                           ;evt_queue.c: 5:     queue->fifo[queue->tail++] = in;
  1233   0011C6  EE21 F001          	lfsr	2,257
  1234   0011CA  5001               	movf	i2write_evt@queue^0,w,c
  1235   0011CC  26D9               	addwf	fsr2l,f,c
  1236   0011CE  5002               	movf	(i2write_evt@queue+1)^0,w,c
  1237   0011D0  22DA               	addwfc	fsr2h,f,c
  1238   0011D2  50DF               	movf	indf2,w,c
  1239   0011D4  6E04               	movwf	??i2_write_evt^0,c
  1240   0011D6  5004               	movf	??i2_write_evt^0,w,c
  1241   0011D8  2401               	addwf	i2write_evt@queue^0,w,c
  1242   0011DA  6ED9               	movwf	fsr2l,c
  1243   0011DC  0E00               	movlw	0
  1244   0011DE  2002               	addwfc	(i2write_evt@queue+1)^0,w,c
  1245   0011E0  6EDA               	movwf	fsr2h,c
  1246   0011E2  C003  FFDF         	movff	i2write_evt@in,indf2
  1247   0011E6  EE21 F001          	lfsr	2,257
  1248   0011EA  5001               	movf	i2write_evt@queue^0,w,c
  1249   0011EC  26D9               	addwf	fsr2l,f,c
  1250   0011EE  5002               	movf	(i2write_evt@queue+1)^0,w,c
  1251   0011F0  22DA               	addwfc	fsr2h,f,c
  1252   0011F2  2ADF               	incf	indf2,f,c
  1253   0011F4                     
  1254                           ;evt_queue.c: 6:     GIE = (tmp & 0b1);;
  1255   0011F4  B005               	btfsc	i2write_evt@tmp^0,0,c
  1256   0011F6  EFFF  F008         	goto	i2u71_41
  1257   0011FA  EF02  F009         	goto	i2u71_40
  1258   0011FE                     i2u71_41:
  1259   0011FE  8EF2               	bsf	4082,7,c	;volatile
  1260   001200  EF03  F009         	goto	i2u72_45
  1261   001204                     i2u71_40:
  1262   001204  9EF2               	bcf	4082,7,c	;volatile
  1263   001206                     i2u72_45:
  1264   001206  0012               	return		;funcret
  1265   001208                     __end_ofi2_write_evt:
  1266                           	callstack 0
  1267                           
  1268                           	psect	smallconst
  1269   001000                     __psmallconst:
  1270                           	callstack 0
  1271   001000  00                 	db	0
  1272   001001  00                 	db	0	; dummy byte at the end
  1273   000000                     
  1274                           	psect	rparam
  1275   000000                     
  1276                           	psect	temp
  1277   000024                     btemp:
  1278                           	callstack 0
  1279   000024                     	ds	1
  1280   000000                     int$flags	set	btemp
  1281   000000                     wtemp8	set	btemp+1
  1282   000000                     ttemp5	set	btemp+1
  1283   000000                     ttemp6	set	btemp+4
  1284   000000                     ttemp7	set	btemp+8
  1285                           
  1286                           	psect	config
  1287                           
  1288                           ; Padding undefined space
  1289   300000                     	org	3145728
  1290   300000  FF                 	db	255
  1291                           
  1292                           ;Config register CONFIG1H @ 0x300001
  1293                           ;	Oscillator Selection bits
  1294                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  1295                           ;	4X PLL Enable
  1296                           ;	PLLCFG = ON, Oscillator multiplied by 4
  1297                           ;	Primary clock enable bit
  1298                           ;	PRICLKEN = 0x1, unprogrammed default
  1299                           ;	Fail-Safe Clock Monitor Enable bit
  1300                           ;	FCMEN = 0x0, unprogrammed default
  1301                           ;	Internal/External Oscillator Switchover bit
  1302                           ;	IESO = 0x0, unprogrammed default
  1303   300001                     	org	3145729
  1304   300001  33                 	db	51
  1305                           
  1306                           ;Config register CONFIG2L @ 0x300002
  1307                           ;	unspecified, using default values
  1308                           ;	Power-up Timer Enable bit
  1309                           ;	PWRTEN = 0x1, unprogrammed default
  1310                           ;	Brown-out Reset Enable bits
  1311                           ;	BOREN = 0x3, unprogrammed default
  1312                           ;	Brown Out Reset Voltage bits
  1313                           ;	BORV = 0x3, unprogrammed default
  1314   300002                     	org	3145730
  1315   300002  1F                 	db	31
  1316                           
  1317                           ;Config register CONFIG2H @ 0x300003
  1318                           ;	Watchdog Timer Enable bits
  1319                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1320                           ;	Watchdog Timer Postscale Select bits
  1321                           ;	WDTPS = 0xF, unprogrammed default
  1322   300003                     	org	3145731
  1323   300003  3C                 	db	60
  1324                           tosu	equ	0xFFF
  1325                           tosh	equ	0xFFE
  1326                           tosl	equ	0xFFD
  1327                           stkptr	equ	0xFFC
  1328                           pclatu	equ	0xFFB
  1329                           pclath	equ	0xFFA
  1330                           pcl	equ	0xFF9
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           prodh	equ	0xFF4
  1336                           prodl	equ	0xFF3
  1337                           indf0	equ	0xFEF
  1338                           postinc0	equ	0xFEE
  1339                           postdec0	equ	0xFED
  1340                           preinc0	equ	0xFEC
  1341                           plusw0	equ	0xFEB
  1342                           fsr0h	equ	0xFEA
  1343                           fsr0l	equ	0xFE9
  1344                           wreg	equ	0xFE8
  1345                           indf1	equ	0xFE7
  1346                           postinc1	equ	0xFE6
  1347                           postdec1	equ	0xFE5
  1348                           preinc1	equ	0xFE4
  1349                           plusw1	equ	0xFE3
  1350                           fsr1h	equ	0xFE2
  1351                           fsr1l	equ	0xFE1
  1352                           bsr	equ	0xFE0
  1353                           indf2	equ	0xFDF
  1354                           postinc2	equ	0xFDE
  1355                           postdec2	equ	0xFDD
  1356                           preinc2	equ	0xFDC
  1357                           plusw2	equ	0xFDB
  1358                           fsr2h	equ	0xFDA
  1359                           fsr2l	equ	0xFD9
  1360                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         271
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    fsm_dispatch@fsm$state	PTR FTN(PTR struct fsm_t,unsigned char ,)void  size(2) Largest target is 0

    fsm_init@fsm$state	PTR FTN(PTR struct fsm_t,unsigned char ,)void  size(2) Largest target is 0

    fsm_transition@fsm$state	PTR FTN(PTR struct fsm_t,unsigned char ,)void  size(2) Largest target is 0

    S1222$0$0	PTR struct fsm_t size(2) Largest target is 0

    S1222fsm_t$state	PTR FTN(PTR struct fsm_t,unsigned char ,)void  size(2) Largest target is 0

    write_evt@queue	PTR volatile struct . size(2) Largest target is 258
		 -> event_queue(BIGRAM[258]), 


Critical Paths under _main in COMRAM

    _gpio0->_driveLED

Critical Paths under _LOW_ISR in COMRAM

    _LOW_ISR->_fsm_add_event
    _fsm_add_event->_write_evt

Critical Paths under _HIGH_ISR in COMRAM

    _HIGH_ISR->i2_fsm_add_event
    i2_fsm_add_event->i2_write_evt

Critical Paths under _main in BANK0

    None.

Critical Paths under _LOW_ISR in BANK0

    None.

Critical Paths under _HIGH_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LOW_ISR in BANK1

    None.

Critical Paths under _HIGH_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LOW_ISR in BANK2

    None.

Critical Paths under _HIGH_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LOW_ISR in BANK3

    None.

Critical Paths under _HIGH_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LOW_ISR in BANK4

    None.

Critical Paths under _HIGH_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LOW_ISR in BANK5

    None.

Critical Paths under _HIGH_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LOW_ISR in BANK6

    None.

Critical Paths under _HIGH_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LOW_ISR in BANK7

    None.

Critical Paths under _HIGH_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LOW_ISR in BANK8

    None.

Critical Paths under _HIGH_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LOW_ISR in BANK9

    None.

Critical Paths under _HIGH_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LOW_ISR in BANK10

    None.

Critical Paths under _HIGH_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LOW_ISR in BANK11

    None.

Critical Paths under _HIGH_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LOW_ISR in BANK12

    None.

Critical Paths under _HIGH_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LOW_ISR in BANK13

    None.

Critical Paths under _HIGH_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LOW_ISR in BANK14

    None.

Critical Paths under _HIGH_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _LOW_ISR in BANK15

    None.

Critical Paths under _HIGH_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      90
                                             20 COMRAM     2     2      0
                           _bsp_init
                              _gpio0
 ---------------------------------------------------------------------------------
 (1) _gpio0                                                0     0      0      90
                           _driveLED
 ---------------------------------------------------------------------------------
 (2) _driveLED                                             1     1      0      90
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bsp_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LOW_ISR                                              5     5      0     285
                                             14 COMRAM     5     5      0
                      _fsm_add_event
 ---------------------------------------------------------------------------------
 (4) _fsm_add_event                                        1     1      0     285
                                             13 COMRAM     1     1      0
                          _write_evt
 ---------------------------------------------------------------------------------
 (5) _write_evt                                            5     2      3     263
                                              8 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HIGH_ISR                                             2     2      0     185
                                              6 COMRAM     2     2      0
                    i2_fsm_add_event
 ---------------------------------------------------------------------------------
 (7) i2_fsm_add_event                                      1     1      0     185
                                              5 COMRAM     1     1      0
                        i2_write_evt
 ---------------------------------------------------------------------------------
 (8) i2_write_evt                                          5     2      3     163
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bsp_init
   _gpio0
     _driveLED

 _LOW_ISR (ROOT)
   _fsm_add_event
     _write_evt

 _HIGH_ISR (ROOT)
   i2_fsm_add_event
     i2_write_evt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     102      55        6.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      23       1       37.2%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhh     21      0       0      37        0.0%
BITBIGSFRllllhh     1E      0       0      51        0.0%
BITBIGSFRllllhh      D      0       0      50        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRllllhl      D      0       0      52        0.0%
BITBIGSFRhllhhh      A      0       0      41        0.0%
BITBIGSFRhhhhl       8      0       0      38        0.0%
BITBIGSFRhllll       7      0       0      45        0.0%
BITBIGSFRhllhhl      6      0       0      43        0.0%
BITBIGSFRlllhh       6      0       0      47        0.0%
BITBIGSFRllh         5      0       0      46        0.0%
BITBIGSFRhllhl       4      0       0      44        0.0%
BITBIGSFRhlh         4      0       0      40        0.0%
BITBIGSFRhllhhl      1      0       0      42        0.0%
BITBIGSFRllllhh      1      0       0      49        0.0%
BITBIGSFRhhl         1      0       0      39        0.0%
BITBIGSFRlllhl       1      0       0      48        0.0%
BITBIGSFRlllll       1      0       0      53        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      54        0.0%
DATA                 0      0     125       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu May 02 22:54:38 2024

                     l32 1108                       l56 121E                       l49 129C  
                     u10 10AC                       u11 10A6                       u30 10BE  
                     u31 10B8                       u25 10AE                       u50 10D0  
                     u51 10CA                       u45 10C0                       u70 10E2  
                     u71 10DC                       u65 10D2                       u90 10F4  
                     u91 10EE                       u85 10E4                       bsr 0FE0  
                    l145 116A                      l978 109C                      _GIE 7F97  
                    u110 1106                      u111 1100                      u105 10F6  
                    u300 122C                      u125 1108                      u301 1228  
                    u170 1298                      u171 1294                      _PR2 0FBB  
                    u290 121A                      _PR6 0F4B                      u291 1216  
                    u887 1236                      wreg 0FE8               _TXSTA1bits 0FAC  
                   l1000 1278                     l1010 1120                     l1002 1280  
                   l1020 112E                     l1012 1126                     l1004 1288  
                   l1030 1158                     l1022 1130                     l1014 1128  
                   l1006 1298                     l1032 115A                     l1024 1142  
                   l1016 112A                     l1008 110A                     l1120 122C  
                   l1034 1164                     l1026 1144                     l1018 112C  
                   l1114 1208                     l1036 1166                     l1028 1146  
                   l1116 120C                     l1038 1168                     l1118 121A  
                   _IPEN 7E87                     _TMR1 0FCE                     _TMR6 0F4C  
        __end_of_LOW_ISR 0124                     _main 1208                     fsr1h 0FE2  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     btemp 0024      __end_ofi2_write_evt 1208  
                   prodl 0FF3                     start 0124             ___param_bank 0000  
       __end_of_HIGH_ISR 109A                    ?_main 0001                    _LATD2 7C62  
                  _LATC4 7C5C                    _LATD3 7C63                    _RC1IE 7CED  
                  _LATD4 7C64                    _LATD5 7C65                    _LATD6 7C66  
                  i1l180 11B8                    i1l175 010C                    i1l197 12B0  
                  i2l180 1206                    i2l165 108E                    i2l197 12C4  
                  _TX1IF 7CF4                    _gpio0 1278           write_evt@queue 0009  
                  ttemp5 0025                    ttemp6 0028                    ttemp7 002C  
                  status 0FD8                    wtemp8 0025          __initialization 124A  
           __end_of_main 124A            _fsm_add_event 129E                   ??_main 0015  
          __activetblptr 0002                ??_LOW_ISR 000F           gpio0@led_state 0023  
                 ?_gpio0 0001                   _ADRESH 0FC4                   _ADRESL 0FC3  
            i2_write_evt 11BA                   _ANSELA 0F38                   _ANSELE 0F3C  
                 _GODONE 7E11                   i1l1306 12A0                   i1l1340 00BC  
                 i1l1350 00F2                   i1l1342 00C2                   i1l1334 002E  
                 i1l1352 0104                   i1l1344 00D4                   i1l1336 003C  
                 i1l1290 1178                   i1l1354 010A                   i1l1346 00DA  
                 i1l1338 004A                   i1l1292 1198                   i1l1348 00EC  
                 i1l1294 11A6                   i1l1286 116C                   i1l1288 1176  
                 i2l1300 11C6                   i2l1302 11E6                   i2l1310 100A  
                 i2l1304 11F4                   i2l1312 1018                   i2l1320 1036  
                 i2l1330 108A                   i2l1322 1044                   i2l1314 1026  
                 i2l1308 12B4                   i2l1332 108C                   i2l1324 1052  
                 i2l1316 102C                   i2l1326 1080                   i2l1318 1034  
                 i2l1328 1086                   i2l1296 11BA                   i2l1298 11C4  
                 _SPBRG1 0FAF                   _TMR1IE 7CE8                   _TMR1IF 7CF0  
                 _TMR2IE 7CE9                   _TMR2IF 7CF1                   _TMR6IE 7BEA  
                 _TMR6IF 7BF2                   _TMR6ON 7A52                   _SSP2IF 7D27  
                 _TXREG1 0FAD         __end_of_bsp_init 116C         __end_of_driveLED 110A  
         ?_fsm_add_event 0001                   clear_0 1252                   clear_1 1264  
                 isa$std 0001             __mediumconst 0000                   tblptru 0FF8  
              ?_HIGH_ISR 0001               __accesstop 0060  __end_of__initialization 126A  
          ___rparam_used 0001          fsm_add_event@in 000E           __pcstackCOMRAM 0001  
          __end_of_gpio0 129E                  ??_gpio0 0015               ??_HIGH_ISR 0007  
      ??i2_fsm_add_event 0006          ??_fsm_add_event 000E                  i1u70_25 11B8  
                i1u80_20 005E                  i1u80_21 0058                  i1u80_26 0060  
                i1u81_20 0076                  i1u81_21 0070                  i1u81_26 0078  
                i1u82_20 008E                  i1u82_21 0088                  i1u82_26 0090  
                i1u83_20 00A6                  i1u83_21 00A0                  i1u83_26 00A8  
                i1u84_20 00BC                  i1u84_21 00B8                  i1u69_20 11B6  
                i1u85_20 00D4                  i1u69_21 11B0                  i1u85_21 00D0  
          i2write_evt@in 0003                  i1u86_20 00EC                  i1u78_20 003C  
                i1u86_21 00E8                  i1u78_21 0038                  i1u87_20 0104  
                i1u79_20 004A                  i1u87_21 0100                  i1u79_21 0046  
                i2u71_40 1204                  i2u71_41 11FE                  i2u72_45 1206  
                i2u73_40 1018                  i2u73_41 1014                  i2u74_40 1026  
                i2u74_41 1022                  i2u75_40 1044                  i2u75_41 1040  
                i2u76_40 1052                  i2u76_41 104E                  i2u77_40 1080  
                i2u77_41 107C                  _LOW_ISR 0018                  _SSP2ADD 0F6E  
                _SSP2BUF 0F6F                ?_bsp_init 0001                ?_driveLED 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 1000  
                __pcinit 124A                  __ramtop 1000                  __ptext0 1208  
                __ptext1 1278                  __ptext2 109A                  __ptext3 110A  
                __ptext5 129E                  __ptext6 116C                  __ptext8 12B2  
                __ptext9 11BA                _T1CONbits 0FCD                _T2CONbits 0FBA  
                _buttons 0017                _T6CONbits 0F4A             ?i2_write_evt 0001  
         __pintcode_body 1002               ??_bsp_init 0014     end_of_initialization 126A  
             ??_driveLED 0014            __Lmediumconst 0000                  int_func 1002  
                postdec1 0FE5                  postinc0 0FEE                _PORTAbits 0F80  
              _PORTCbits 0F82        __end_of_write_evt 11BA                _TRISAbits 0F92  
              _TRISBbits 0F93                _TRISCbits 0F94                _TRISDbits 0F95  
           write_evt@tmp 000D               driveLED@in 0014      start_initialization 124A  
        i2_fsm_add_event 12B2              __pbssBIGRAM 0E36              __pbssCOMRAM 0017  
               ?_LOW_ISR 0001                __pintcode 0008    __end_of_fsm_add_event 12B2  
            __pintcodelo 0018  __end_ofi2_fsm_add_event 12C6              __smallconst 1000  
               _HIGH_ISR 0008                 _LATAbits 0F89                 _LATBbits 0F8A  
               _LATCbits 0F8B                 _LATDbits 0F8C                 _IPR1bits 0F9F  
         i2write_evt@tmp 0005               _ADCON0bits 0FC2               _ADCON2bits 0FC0  
            _bsp_timeout 001F              write_evt@in 000B                _write_evt 116C  
               __Hrparam 0000                 __Lrparam 0000              _event_queue 0E36  
       ?i2_fsm_add_event 0001               _ANSELAbits 0F38               _ANSELCbits 0F3A  
             _ANSELDbits 0F3B               ?_write_evt 0009             _SSP2CON1bits 0F6C  
           _SSP2CON2bits 0F6B                 _bsp_init 110A                 _driveLED 109A  
               isa$xinst 0000                 int$flags 0024             _SSP2STATbits 0F6D  
               intlevel1 0000                 intlevel2 0000               _RCSTA1bits 0FAB  
      i2fsm_add_event@in 0006         i2write_evt@queue 0001            ??i2_write_evt 0004  
            ??_write_evt 000C  
